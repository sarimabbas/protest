// Generated by Xata Codegen 0.23.5. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "content",
    columns: [
      { name: "embedding", type: "vector", vector: { dimension: 1536 } },
      { name: "list", type: "link", link: { table: "lists" } },
      { name: "isPositive", type: "bool", defaultValue: "false" },
      { name: "text", type: "text" },
      { name: "canonicalLink", type: "string" },
    ],
  },
  { name: "lists", columns: [{ name: "name", type: "string" }] },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Content = InferredTypes["content"];
export type ContentRecord = Content & XataRecord;

export type Lists = InferredTypes["lists"];
export type ListsRecord = Lists & XataRecord;

export type DatabaseSchema = {
  content: ContentRecord;
  lists: ListsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL: "https://Protest-37ev59.us-east-1.xata.sh/db/protest-example",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
